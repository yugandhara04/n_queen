form the following operations using Python on any open irce dataset (e.g., data.csv)
1. Import all the required Python Libraries.
2. Locate an open source data from the web (e.g... https://www.kaggle.com). Provide a clear description of the data and its source (i.e., URL of the web site).
3. Load the Dataset into pandas dataframe.
4. Data Preprocessing: check for missing values in the data using pandas isnull(), describe() function to get some initial statistics. Provide variable descriptions. Types of variables etc. Check the dimensions of the data frame.
5. Data Formatting and Data Normalization: Summarize the types of variables by checking the data types (ie., character, numeric, integer, factor, and logical) of the variables in the data set. If variables are not in the correct data type, apply proper type conversions.
6. Turn categorical variables into quantitative variables in Python.
In addition to the codes and outputs, explain every operation that you do in the above steps andexplain everything that you do to import/read/scrape the data set.
# Importing the necessary libraries
---------------------------------------------------------------------------------------------------------------------------------------------
import pandas as pd     # For data manipulation
import numpy as np      # For numerical operations
import matplotlib.pyplot as plt  # For plotting
import seaborn as sns


# Loading the dataset into a pandas dataframe
df = sns.load_dataset("titanic")

df.head(5)
df.tail(5)
df.info()
df.isnull()
df.isnull().sum()
df["age"].fillna(df["age"].median(),inplace=True)
df.dropna(subset=['embarked', 'embark_town'], inplace=True)

df.drop(columns=['deck'], inplace=True)

df.describe()
df.count()
df.dtypes
# cat to num
categorical_columns=df.select_dtypes(include=["object","category"]).columns
df=pd.get_dummies(df,columns=categorical_columns,drop_first=True)
df.dtypes

# Normalize numerical columns using Min-Max Scaling
numeric_columns = df.select_dtypes(include=['int64', 'float64']).columns

# Apply normalization only to numeric columns
for col in numeric_columns:
    df[col] = (df[col] - df[col].min()) / (df[col].max() - df[col].min())

# Plot histogram of 'age'
plt.hist(df['age'], bins=10, color='purple', edgecolor='black')
plt.title('Distribution of Age (Normalized)')
plt.xlabel('Age (Normalized)')
plt.ylabel('Frequency')
plt.show()

