def print_board(board):
    for row in board:
        print(" ".join(row))
    print()

def is_safe(board, row, col, n):
    for i in range(row):
        if board[i][col] == '1':
            return False
    for i, j in zip(range(row-1, -1, -1), range(col-1, -1, -1)):
        if board[i][j] == '1':
            return False
    for i, j in zip(range(row-1, -1, -1), range(col+1, n)):
        if board[i][j] == '1':
            return False
    return True

def solve(board, row, n):
    if row == n:
        print_board(board)
        return True
    for col in range(n):
        if is_safe(board, row, col, n):
            board[row][col] = '1'
            if solve(board, row+1, n):
                return True
            board[row][col] = '0'  # Backtrack
    return False

# Main
n = 8
board = [['0' for _ in range(n)] for _ in range(n)]
solve(board, 0, n)
